  (1) index.html
---------------------
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name ="viewport" content="width=device-width, initial scale=1.0">
        <title>Ping Me - Realtime Node Socket.io Chat App</title>
        <script defer src="http://localhost:8000/socket.io/socket.io.js"></script>
        <script defer src="js/client.js"></script>
        <link rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <nav>
            <img class="logo" src="icon.png" alt="">
            <h1>Welcome to Ping Me Chat App!</h1>
        </nav>
        <div class="container">
            <!-- <div class="message right">Akrity: Hey how are you?</div>

            <div class="message left">Rohan: Hi I am fine, how about you?</div> -->
        </div>  
        
        <div class="send">
            <form action= "#" id="send-container">
                <input type="text" name="messageInp" id="messageInp">
                <button class="btn" type="submit">Send</button>
            </form>
        </div>
     </body>        
</html>
---------------------------------------------------------------------------------------------------------------
  (2) style.css  (Folder Name-css)
-----------------------------------
body{
    height: 120vh;
    background-image: linear-gradient(rgb(255, 255, 255), rgb(8, 196, 253));
}
.logo{
    display: block;
    margin: auto;
    width: 50px;
    height: 50px;
}
h1{
    margin-top: 12px;
    font-size: 30px;
    font-family: 'Times New Roman', Times, serif;
    text-align: center;
}
.container{
    max-width: 955px;
    border: 2px solid white;
    margin: auto;
    height: 60vh;
    padding: 33px;
    overflow-y: auto;
    margin-bottom: 23px;
}
.message{
    background-color: rgb(9, 244, 252);
    width: 24%;
    padding: 10px;
    margin: 17px 12px;
    border: 2px solid whitesmoke;
    border-radius: 10px;
}
.left{
    float: left;
    clear: both;
}
.right{
    float: right;
    clear: both;
}
#send-container{
    display: block;
    margin: auto;
    text-align: center;
    max-width: 985px;
    width: 100%;
    }
#messageInp{
    width: 92%;
    border: 2px solid aliceblue;
    border-radius: 6px;
    height: 34px;
    font-size: 18px;
    font-style: normal;
    font-family: emoji;
}
.btn{
    cursor: pointer;
    border: 2px solid aliceblue;
    border-radius: 6px;
    height: 40px;
}
--------------------------------------------------------------------------------------

(3) index.js (Folder Name- nodeServer)
---------------------------------------

//  Node server which will handle socket io connections
const io = require('socket.io')(8000,{
    cors: {
         origin:'*',
    }
 
});

const users = {};

io.on('connection', socket =>{
    socket.on('new-user-joined', name =>{
         console.log("New user", name);
        users[socket.id] = name;
        socket.broadcast.emit('user-joined', name);
    });

    socket.on('send', message =>{
        socket.broadcast.emit('recieve', {message: message, name: users[socket.id]})
    });

    socket.on('disconnect', message =>{
        socket.broadcast.emit('left', users[socket.id]);
        delete users[socket.id];
    });

    
})
--------------------------------------------------------------------------------------

(4) client.js  (Folder Name- js )
-----------------------------------

const socket = io('http://localhost:8000');

const form = document.getElementById('send-container');
const messageInput = document.getElementById('messageInp')
const messageContainer = document.querySelector(".container")
var audio = new Audio('ting.mp3');

const append = (message, position)=>{
     const messageElement = document.createElement('div');
     messageElement.innerText = message;
     messageElement.classList.add('message');
     messageElement.classList.add(position);
     messageContainer.append(messageElement);
     if(position == 'left'){
         audio.play();
     }
}

form.addEventListener('submit', (e)=>{
     e.preventDefault();
     const message = messageInput.value;
     append(`You: ${message}`, 'right');
     socket.emit('send', message);
     messageInput.value = ''
})

const name = prompt("Enter your name to join");
socket.emit('new-user-joined', name)

socket.on('user-joined', name =>{
    append(`${name} joined the chat`, 'right')
})

 socket.on('recieve', data =>{
     append(`${data.name}: ${data.message}`, 'left')
})

socket.on('left', name =>{
    append(`${name} left the chat`, 'left')
})
----------------------------------------------------------------------------------------








